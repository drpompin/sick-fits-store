{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\\n    deleteItem(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport styled from 'styled-components';\nvar DELETE_ITEM_MUTATION = gql(_templateObject());\nvar DeleteButton = styled.button.withConfig({\n  displayName: \"DeleteItem__DeleteButton\",\n  componentId: \"sc-1tipz79-0\"\n})([\"cursor:pointer;\"]);\n\nvar DeleteItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteItem, _Component);\n\n  var _super = _createSuper(DeleteItem);\n\n  function DeleteItem() {\n    var _this;\n\n    _classCallCheck(this, DeleteItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      // manually update the cache on the client, so it matches the server\n      // 1. Read the cache for the items we want\n      var data = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      console.log(data, payload); // 2. Filter the deleted itemout of the page\n\n      data.items = data.items.filter(function (item) {\n        return item.id !== payload.data.deleteItem.id;\n      }); // 3. Put the items back!\n\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_ITEM_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update\n      }, function (deleteItem, _ref) {\n        var error = _ref.error;\n        return __jsx(DeleteButton, {\n          onClick: function onClick() {\n            if (confirm('Are you sure you want to delete this item?')) {\n              deleteItem()[\"catch\"](function (err) {\n                alert(err.message);\n              });\n            }\n          }\n        }, _this2.props.children);\n      });\n    }\n  }]);\n\n  return DeleteItem;\n}(Component);\n\nexport default DeleteItem;","map":null,"metadata":{},"sourceType":"module"}