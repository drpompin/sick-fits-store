{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Signup.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!) {\n    # signup below is the endpoint the ALL_ITEMS_QUERY query is hitting @ d backend\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      password: '',\n      email: ''\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: SIGNUP_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, (signup, {\n      error,\n      loading\n    }) => __jsx(Form //Post method here is used to prevent the password from being revealed in the url\n    , {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await signup();\n        this.setState({\n          name: '',\n          email: '',\n          password: ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Sign Up for An Account\"), __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Email\", __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      value: this.state.email,\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Name\", __jsx(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"name\",\n      value: this.state.name,\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Sign Up!\"))));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Signup.js"],"names":["React","Component","Mutation","gql","Form","Error","CURRENT_USER_QUERY","SIGNUP_MUTATION","Signup","name","password","email","e","setState","target","value","render","state","query","signup","error","loading","preventDefault","saveToState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAGA,MAAMC,eAAe,GAAGJ,GAAI;;;;;;;;;CAA5B;;AAWA,MAAMK,MAAN,SAAqBP,SAArB,CAA+B;AAAA;AAAA;;AAAA,mCACnB;AACJQ,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADmB;;AAAA,yCAMbC,CAAC,IAAI;AACf,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASL,IAAV,GAAiBG,CAAC,CAACE,MAAF,CAASC;AAA5B,OAAd;AACH,KAR0B;AAAA;;AAS3BC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAET,eAApB;AACI,MAAA,SAAS,EAAE,KAAKU,KADpB;AAEI,MAAA,cAAc,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEZ;AAAT,OAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,CAACa,MAAD,EAAS;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAT,KACG,MAAC,IAAD,CACI;AADJ;AAEI,MAAA,MAAM,EAAC,MAFX;AAGI,MAAA,QAAQ,EAAE,MAAMT,CAAN,IAAW;AACjBA,QAAAA,CAAC,CAACU,cAAF;AACA,cAAMH,MAAM,EAAZ;AACA,aAAKN,QAAL,CAAc;AAAEJ,UAAAA,IAAI,EAAE,EAAR;AAAYE,UAAAA,KAAK,EAAE,EAAnB;AAAuBD,UAAAA,QAAQ,EAAE;AAAjC,SAAd;AACH,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI;AAAU,MAAA,QAAQ,EAAEW,OAApB;AAA6B,mBAAWA,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEA;AACQ,MAAA,IAAI,EAAC,OADb;AAEQ,MAAA,IAAI,EAAC,OAFb;AAGQ,MAAA,WAAW,EAAC,OAHpB;AAIQ,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWN,KAJ1B;AAKQ,MAAA,QAAQ,EAAE,KAAKY,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAHJ,EAaI;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEA;AACQ,MAAA,IAAI,EAAC,MADb;AAEQ,MAAA,IAAI,EAAC,MAFb;AAGQ,MAAA,WAAW,EAAC,MAHpB;AAIQ,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWR,IAJ1B;AAKQ,MAAA,QAAQ,EAAE,KAAKc,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAbJ,EAuBI;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEA;AACQ,MAAA,IAAI,EAAC,UADb;AAEQ,MAAA,IAAI,EAAC,UAFb;AAGQ,MAAA,WAAW,EAAC,UAHpB;AAIQ,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWP,QAJ1B;AAKQ,MAAA,QAAQ,EAAE,KAAKa,WALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAvBJ,EAkCI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCJ,CATJ,CANR,CADJ;AAwDH;;AAlE0B;;AAqE/B,eAAef,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\n\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION($email: String!, $name: String!, $password: String!) {\n    # signup below is the endpoint the ALL_ITEMS_QUERY query is hitting @ d backend\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signup extends Component {\n    state = {\n        name: '',\n        password: '',\n        email: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n            <Mutation mutation={SIGNUP_MUTATION} \n                variables={this.state}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n                >\n                {/* error and loading are being destructured into their own elements below */}\n                {(signup, { error, loading }) => (\n                    <Form\n                        //Post method here is used to prevent the password from being revealed in the url\n                        method=\"post\"\n                        onSubmit={async e => {\n                            e.preventDefault();\n                            await signup();\n                            this.setState({ name: '', email: '', password: '' });\n                        }}\n                    >\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Sign Up for An Account</h2>\n                            <Error error={error} />\n                            <label htmlFor=\"email\">\n                                Email\n                            <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n                            <label htmlFor=\"name\">\n                                Name\n                            <input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    placeholder=\"name\"\n                                    value={this.state.name}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n                            <label htmlFor=\"password\">\n                                Password\n                            <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <button type=\"submit\">Sign Up!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}