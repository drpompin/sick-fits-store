{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Cart.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    #   The @client in d below line ensures that apollo doesnt query the server but d client\n    cartOpen @client\n  }\n`;\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\nconst Cart = () => __jsx(User, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, ({\n  data: {\n    me\n  }\n}) => {\n  if (!me) return null;\n  console.log(me);\n  return __jsx(Mutation, {\n    mutation: TOGGLE_CART_MUTATION,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, toggleCart => __jsx(Query, {\n    query: LOCAL_STATE_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, ({\n    data\n  }) => __jsx(CartStyles, {\n    open: data.cartOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(CloseButton, {\n    onClick: toggleCart,\n    title: \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"\\xD7\"), __jsx(Supreme, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, me.name, \"'s Cart\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"You Have \", me.cart.length, \" Item\", me.cart.length === 1 ? '' : 's', \" in your cart.\")), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, me.cart.map(cartItem => __jsx(CartItem, {\n    key: cartItem.id,\n    cartItem: cartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))), __jsx(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, formatMoney(calcTotalPrice(me.cart))), __jsx(SickButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Checkout\")))));\n});\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Cart.js"],"names":["React","Query","Mutation","gql","User","CartStyles","Supreme","CloseButton","SickButton","CartItem","calcTotalPrice","formatMoney","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","Cart","data","me","console","log","toggleCart","cartOpen","name","cart","length","map","cartItem","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,iBAAiB,GAAGT,GAAI;;;;;CAA9B;AAOA,MAAMU,oBAAoB,GAAGV,GAAI;;;;CAAjC;;AAMA,MAAMW,IAAI,GAAG,MACT,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACK,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAR,CAAD,KAAsB;AACnB,MAAI,CAACA,EAAL,EAAS,OAAO,IAAP;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,SACI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,UAAU,IACP,MAAC,KAAD;AAAO,IAAA,KAAK,EAAEP,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEG,IAAAA;AAAF,GAAD,KACG,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,IAAI,CAACK,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAa,IAAA,OAAO,EAAED,UAAtB;AAAkC,IAAA,KAAK,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAII,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUH,EAAE,CAACK,IAAb,YAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACcL,EAAE,CAACM,IAAH,CAAQC,MADtB,WACmCP,EAAE,CAACM,IAAH,CAAQC,MAAR,KAAmB,CAAnB,GAAuB,EAAvB,GAA4B,GAD/D,mBALJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,EAAE,CAACM,IAAH,CAAQE,GAAR,CAAYC,QAAQ,IAAI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,QAAQ,EAAED,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CADL,CAVJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAId,WAAW,CAACD,cAAc,CAACM,EAAE,CAACM,IAAJ,CAAf,CAAf,CADJ,EAEI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAbJ,CAFR,CAFR,CADJ;AA4BH,CAhCL,CADJ;;AAqCA,eAAeR,IAAf;AACA,SAASF,iBAAT,EAA4BC,oBAA5B","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    #   The @client in d below line ensures that apollo doesnt query the server but d client\n    cartOpen @client\n  }\n`;\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\nconst Cart = () => (\n    <User>\n        {({ data: { me } }) => {\n            if (!me) return null;\n            console.log(me);\n            return (\n                <Mutation mutation={TOGGLE_CART_MUTATION}>\n                    {toggleCart => (\n                        <Query query={LOCAL_STATE_QUERY}>\n                            {({ data }) => (\n                                <CartStyles open={data.cartOpen}>\n                                    <header>\n                                        <CloseButton onClick={toggleCart} title=\"close\">\n                                            &times;\n                                        </CloseButton>\n                                        <Supreme>{me.name}'s Cart</Supreme>\n                                        <p>\n                                            You Have {me.cart.length} Item{me.cart.length === 1 ? '' : 's'} in your cart.\n                                        </p>\n                                    </header>\n                                    <ul>\n                                        {me.cart.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem} />)}\n                                    </ul>\n                                    <footer>\n                                        <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n                                        <SickButton>Checkout</SickButton>\n                                    </footer>\n                                </CartStyles>\n                            )}\n                        </Query>\n                    )}\n                </Mutation>\n            );\n        }}\n    </User>\n);\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };"]},"metadata":{},"sourceType":"module"}