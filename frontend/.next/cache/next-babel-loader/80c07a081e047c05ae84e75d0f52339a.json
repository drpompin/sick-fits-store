{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Cart.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    toggleCart @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    #   The @client in d below line ensures that apollo doesnt query the server but d client\\n    cartOpen @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { adopt } from 'react-adopt';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport TakeMyMoney from './TakeMyMoney';\nvar LOCAL_STATE_QUERY = gql(_templateObject());\nvar TOGGLE_CART_MUTATION = gql(_templateObject2());\n/* adopt from \"react-adopt\" package is used here. It helps to deal with issues arising from \n renderProp */\n\n/* It composes all the renderProps functions into a single composed fxn/component that will \n eventually expose all the needed props \n  The older component is hashed out at the bottom for reference purpose\n */\n\n/* eslint-disable */\n\nvar Composed = adopt({\n  /* variable Composed is declared and equates to adopt which takes an object of all the \n   things we are composing together */\n  user: function user(_ref) {\n    var render = _ref.render;\n    return __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, render);\n  },\n  toggleCart: function toggleCart(_ref2) {\n    var render = _ref2.render;\n    return __jsx(Mutation, {\n      mutation: TOGGLE_CART_MUTATION,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, render);\n  },\n  localState: function localState(_ref3) {\n    var render = _ref3.render;\n    return __jsx(Query, {\n      query: LOCAL_STATE_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, render);\n  }\n});\n/* eslint-enable */\n\nvar Cart = function Cart() {\n  return __jsx(Composed, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, function (_ref4) {\n    var user = _ref4.user,\n        toggleCart = _ref4.toggleCart,\n        localState = _ref4.localState;\n    var me = user.data.me;\n    if (!me) return null;\n    return __jsx(CartStyles, {\n      open: localState.data.cartOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(CloseButton, {\n      onClick: toggleCart,\n      title: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"\\xD7\"), __jsx(Supreme, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, me.name, \"'s Cart\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"You Have \", me.cart.length, \" Item\", me.cart.length === 1 ? '' : 's', \" in your cart.\")), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, me.cart.map(function (cartItem) {\n      return __jsx(CartItem, {\n        key: cartItem.id,\n        cartItem: cartItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    })), __jsx(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, formatMoney(calcTotalPrice(me.cart))), me.cart.length && __jsx(TakeMyMoney, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(SickButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Checkout\"))));\n  });\n};\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION }; // import React from 'react';\n// import { Query, Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import User from './User';\n// import CartStyles from './styles/CartStyles';\n// import Supreme from './styles/Supreme';\n// import CloseButton from './styles/CloseButton';\n// import SickButton from './styles/SickButton';\n// import CartItem from './CartItem';\n// import calcTotalPrice from '../lib/calcTotalPrice';\n// import formatMoney from '../lib/formatMoney';\n// const LOCAL_STATE_QUERY = gql`\n//   query {\n//     #   The @client in d below line ensures that apollo doesnt query the server but d client\n//     cartOpen @client\n//   }\n// `;\n// const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n// const Cart = () => (\n//     <User>\n//         {({ data: { me } }) => {\n//             if (!me) return null;\n//             console.log(me);\n//             return (\n//                 <Mutation mutation={TOGGLE_CART_MUTATION}>\n//                     {toggleCart => (\n//                         <Query query={LOCAL_STATE_QUERY}>\n//                             {({ data }) => (\n//                                 <CartStyles open={data.cartOpen}>\n//                                     <header>\n//                                         <CloseButton onClick={toggleCart} title=\"close\">\n//                                             &times;\n//                                         </CloseButton>\n//                                         <Supreme>{me.name}'s Cart</Supreme>\n//                                         <p>\n//                                             You Have {me.cart.length} Item{me.cart.length === 1 ? '' : 's'} in your cart.\n//                                         </p>\n//                                     </header>\n//                                     <ul>\n//                                         {me.cart.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem} />)}\n//                                     </ul>\n//                                     <footer>\n//                                         <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n//                                         <SickButton>Checkout</SickButton>\n//                                     </footer>\n//                                 </CartStyles>\n//                             )}\n//                         </Query>\n//                     )}\n//                 </Mutation>\n//             );\n//         }}\n//     </User>\n// );\n// export default Cart;\n// export { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Cart.js"],"names":["React","Query","Mutation","gql","adopt","User","CartStyles","Supreme","CloseButton","SickButton","CartItem","calcTotalPrice","formatMoney","TakeMyMoney","LOCAL_STATE_QUERY","TOGGLE_CART_MUTATION","Composed","user","render","toggleCart","localState","Cart","me","data","cartOpen","name","cart","length","map","cartItem","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { adopt } from 'react-adopt';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport TakeMyMoney from './TakeMyMoney';\n\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    #   The @client in d below line ensures that apollo doesnt query the server but d client\n    cartOpen @client\n  }\n`;\n\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n\n/* adopt from \"react-adopt\" package is used here. It helps to deal with issues arising from \n renderProp */\n/* It composes all the renderProps functions into a single composed fxn/component that will \n eventually expose all the needed props \n  The older component is hashed out at the bottom for reference purpose\n */\n\n\n/* eslint-disable */\nconst Composed = adopt({\n    /* variable Composed is declared and equates to adopt which takes an object of all the \n     things we are composing together */\n    user: ({ render }) => <User>{render}</User>,\n    toggleCart: ({ render }) => <Mutation mutation={TOGGLE_CART_MUTATION}>{render}</Mutation>,\n    localState: ({ render }) => <Query query={LOCAL_STATE_QUERY}>{render}</Query>,\n});\n/* eslint-enable */\n\nconst Cart = () => (\n    <Composed>\n        {({ user, toggleCart, localState }) => {\n            const me = user.data.me;\n            if (!me) return null;\n            return (\n                <CartStyles open={localState.data.cartOpen}>\n                    <header>\n                        <CloseButton onClick={toggleCart} title=\"close\">\n                            &times;\n                        </CloseButton>\n                        <Supreme>{me.name}'s Cart</Supreme>\n                        <p>\n                            You Have {me.cart.length} Item{me.cart.length === 1 ? '' : 's'} in your cart.\n                        </p>\n                    </header>\n                    <ul>{me.cart.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem} />)}</ul>\n                    <footer>\n                        <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n                        {me.cart.length && (\n                            <TakeMyMoney>\n                                <SickButton>Checkout</SickButton>\n                            </TakeMyMoney>\n                        )}\n                    </footer>\n                </CartStyles>\n            );\n        }}\n    </Composed>\n);\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\n\n\n\n\n\n// import React from 'react';\n// import { Query, Mutation } from 'react-apollo';\n// import gql from 'graphql-tag';\n// import User from './User';\n// import CartStyles from './styles/CartStyles';\n// import Supreme from './styles/Supreme';\n// import CloseButton from './styles/CloseButton';\n// import SickButton from './styles/SickButton';\n// import CartItem from './CartItem';\n// import calcTotalPrice from '../lib/calcTotalPrice';\n// import formatMoney from '../lib/formatMoney';\n\n// const LOCAL_STATE_QUERY = gql`\n//   query {\n//     #   The @client in d below line ensures that apollo doesnt query the server but d client\n//     cartOpen @client\n//   }\n// `;\n\n// const TOGGLE_CART_MUTATION = gql`\n//   mutation {\n//     toggleCart @client\n//   }\n// `;\n\n// const Cart = () => (\n//     <User>\n//         {({ data: { me } }) => {\n//             if (!me) return null;\n//             console.log(me);\n//             return (\n//                 <Mutation mutation={TOGGLE_CART_MUTATION}>\n//                     {toggleCart => (\n//                         <Query query={LOCAL_STATE_QUERY}>\n//                             {({ data }) => (\n//                                 <CartStyles open={data.cartOpen}>\n//                                     <header>\n//                                         <CloseButton onClick={toggleCart} title=\"close\">\n//                                             &times;\n//                                         </CloseButton>\n//                                         <Supreme>{me.name}'s Cart</Supreme>\n//                                         <p>\n//                                             You Have {me.cart.length} Item{me.cart.length === 1 ? '' : 's'} in your cart.\n//                                         </p>\n//                                     </header>\n//                                     <ul>\n//                                         {me.cart.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem} />)}\n//                                     </ul>\n//                                     <footer>\n//                                         <p>{formatMoney(calcTotalPrice(me.cart))}</p>\n//                                         <SickButton>Checkout</SickButton>\n//                                     </footer>\n//                                 </CartStyles>\n//                             )}\n//                         </Query>\n//                     )}\n//                 </Mutation>\n//             );\n//         }}\n//     </User>\n// );\n\n// export default Cart;\n// export { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };\n"]},"metadata":{},"sourceType":"module"}