{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => __jsx(Query, {\n  query: PAGINATION_QUERY\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  const count = data.itemsConnection.aggregate.count;\n  const pages = Math.ceil(count / perPage);\n  const page = props.page;\n  return __jsx(PaginationStyles, {\n    \"data-test\": \"pagination\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Sick Fits! \\u2014 Page \", page, \" of \", pages)), __jsx(Link // The prefetch attribute here always loads the previous and next page to allow for \n  // faster loading of the pages\n  , {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page - 1\n      }\n    }\n  }, __jsx(\"a\", {\n    className: \"prev\",\n    \"aria-disabled\": page <= 1\n  }, \"\\u2190 Prev\")), __jsx(\"p\", null, \"Page \", props.page, \" of\", __jsx(\"span\", {\n    className: \"totalPages\"\n  }, pages), \"!\"), __jsx(\"p\", null, count, \" Items Total\"), __jsx(Link, {\n    prefetch: true,\n    href: {\n      pathname: 'items',\n      query: {\n        page: page + 1\n      }\n    }\n  }, __jsx(\"a\", {\n    className: \"next\",\n    \"aria-disabled\": page >= pages\n  }, \"Next \\u2192\")));\n});\n\nexport default Pagination;\nexport { PAGINATION_QUERY };","map":null,"metadata":{},"sourceType":"module"}