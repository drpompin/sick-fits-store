{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/DeleteItem.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    cursor: pointer;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\\n    deleteItem(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport styled from 'styled-components';\nvar DELETE_ITEM_MUTATION = gql(_templateObject());\nvar DeleteButton = styled.button(_templateObject2());\n\nvar DeleteItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteItem, _Component);\n\n  function DeleteItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeleteItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeleteItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      // manually update the cache on the client, so it matches the server\n      // 1. Read the cache for the items we want\n      var data = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      console.log(data, payload); // 2. Filter the deleted item out of the page\n\n      data.items = data.items.filter(function (item) {\n        return item.id !== payload.data.deleteItem.id;\n      }); // 3. Put the items back!\n\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: DELETE_ITEM_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, function (deleteItem, _ref) {\n        var error = _ref.error;\n        return __jsx(\"button\", {\n          onClick: function onClick() {\n            if (confirm('Are you sure you want to delete this item?')) {\n              deleteItem();\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, _this2.props.children);\n      });\n    }\n  }]);\n\n  return DeleteItem;\n}(Component);\n\nexport default DeleteItem;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/DeleteItem.js"],"names":["React","Component","Mutation","gql","ALL_ITEMS_QUERY","styled","DELETE_ITEM_MUTATION","DeleteButton","button","DeleteItem","cache","payload","data","readQuery","query","console","log","items","filter","item","id","deleteItem","writeQuery","props","update","error","confirm","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,oBAAoB,GAAGH,GAAH,mBAA1B;AASA,IAAMI,YAAY,GAAGF,MAAM,CAACG,MAAV,oBAAlB;;IAKMC,U;;;;;;;;;;;;;;;;;;6DAGO,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACzB;AACA;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAhB,CAAb;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBD,OAAlB,EAJyB,CAKzB;;AACAC,MAAAA,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACK,KAAL,CAAWC,MAAX,CAAkB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYT,OAAO,CAACC,IAAR,CAAaS,UAAb,CAAwBD,EAAxC;AAAA,OAAtB,CAAb,CANyB,CAOzB;;AACAV,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEV,eAAT;AAA0BQ,QAAAA,IAAI,EAAJA;AAA1B,OAAjB;AACH,K;;;;;;;6BACQ;AAAA;;AACL,aACI,MAAC,QAAD;AACI,QAAA,QAAQ,EAAEN,oBADd;AAEI,QAAA,SAAS,EAAE;AAAEc,UAAAA,EAAE,EAAE,KAAKG,KAAL,CAAWH;AAAjB,SAFf;AAGI,QAAA,MAAM,EAAE,KAAKI,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK,UAACH,UAAD;AAAA,YAAeI,KAAf,QAAeA,KAAf;AAAA,eACG;AACI,UAAA,OAAO,EAAE,mBAAM;AACX,gBAAIC,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACvDL,cAAAA,UAAU;AACb;AACJ,WALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOK,MAAI,CAACE,KAAL,CAAWI,QAPhB,CADH;AAAA,OALL,CADJ;AAmBH;;;;EAjCoB1B,S;;AAoCzB,eAAeQ,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport styled from 'styled-components';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\n\nconst DeleteButton = styled.button`\n    cursor: pointer;\n`;\n\n\nclass DeleteItem extends Component {\n\n    //Apollo gives us access to the cache and the payload as below\n    update = (cache, payload) => {\n        // manually update the cache on the client, so it matches the server\n        // 1. Read the cache for the items we want\n        const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n        console.log(data, payload);\n        // 2. Filter the deleted item out of the page\n        data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n        // 3. Put the items back!\n        cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={DELETE_ITEM_MUTATION}\n                variables={{ id: this.props.id }}\n                update={this.update}\n            >\n                {(deleteItem, { error }) => (\n                    <button\n                        onClick={() => {\n                            if (confirm('Are you sure you want to delete this item?')) {\n                                deleteItem();\n                            }\n                        }}\n                    >\n                        {this.props.children}\n                    </button>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}