{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Signin.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      password: '',\n      email: ''\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: SIGNIN_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, (signup, {\n      error,\n      loading\n    }) => __jsx(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await signup();\n        this.setState({\n          name: '',\n          email: '',\n          password: ''\n        }); // window.location.replace(\"/items\");\n\n        Router.push({\n          pathname: '/items'\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, \"Sign into your account\"), __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Email\", __jsx(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email\",\n      value: this.state.email,\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.saveToState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Sign In!\"))));\n  }\n\n}\n\nexport default Signin;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Signin.js"],"names":["React","Component","Mutation","Router","gql","Form","Error","CURRENT_USER_QUERY","SIGNIN_MUTATION","Signin","name","password","email","e","setState","target","value","render","state","query","signup","error","loading","preventDefault","push","pathname","saveToState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signin extends Component {\n    state = {\n        name: '',\n        password: '',\n        email: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={SIGNIN_MUTATION}\n                variables={this.state}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(signup, { error, loading }) => (\n                    <Form\n                        method=\"post\"\n                        onSubmit={async e => {\n                            e.preventDefault();\n                            await signup();\n                            this.setState({ name: '', email: '', password: '' });\n                            // window.location.replace(\"/items\");\n                            Router.push({\n                                pathname: '/items',\n                            });\n                        }}\n                    >\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Sign into your account</h2>\n                            <Error error={error} />\n                            <label htmlFor=\"email\">\n                                Email\n                            <input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n                            <label htmlFor=\"password\">\n                                Password\n                            <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <button type=\"submit\">Sign In!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Signin;"]},"metadata":{},"sourceType":"module"}