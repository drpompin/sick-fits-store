{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onToken\", async (res, createOrder) => {\n      NProgress.start();\n      console.log('On Token Called!');\n      console.log(res.id); // manually call the mutation once we have the stripe token\n\n      const order = await createOrder({\n        variables: {\n          token: res.id\n        }\n      }).catch(err => {\n        alert(err.message);\n      });\n      Router.push({\n        pathname: '/order',\n        query: {\n          id: order.data.createOrder.id\n        }\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.props);\n    return __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, ({\n      data: {\n        me\n      },\n      loading\n    }) => {\n      if (loading) return null;\n      return __jsx(Mutation, {\n        mutation: CREATE_ORDER_MUTATION,\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, createOrder => __jsx(StripeCheckout, {\n        amount: calcTotalPrice(me.cart),\n        name: \"Sick Fits\",\n        description: `Order of ${totalItems(me.cart)} items!`,\n        image: me.cart.length && me.cart[0].item && me.cart[0].item.image,\n        stripeKey: \"pk_test_TpDWdng7KOHpVzuklXgxwxO400N0cmGCZP\",\n        currency: \"USD\",\n        email: me.email,\n        token: res => this.onToken(res, createOrder),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.children));\n    });\n  }\n\n}\n\nexport default TakeMyMoney;\nexport { CREATE_ORDER_MUTATION };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js"],"names":["React","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","CREATE_ORDER_MUTATION","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","Component","res","createOrder","start","console","log","id","order","variables","token","catch","err","alert","message","push","pathname","query","data","render","me","loading","length","item","image","email","onToken","props","children"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n    onToken = async (res, createOrder) => {\n        NProgress.start();\n        console.log('On Token Called!');\n        console.log(res.id);\n        // manually call the mutation once we have the stripe token\n        const order = await createOrder({\n            variables: {\n                token: res.id,\n            },\n        })\n        .catch(err => {\n            alert(err.message);\n        });\n        Router.push({\n            pathname: '/order',\n            query: { id: order.data.createOrder.id },\n        });\n    };\n    render() {\n\n        // console.log(this.props);\n\n        return (\n            <User>\n                {({ data: { me }, loading }) => {\n                if (loading) return null;\n                return (\n                    <Mutation\n                        mutation={CREATE_ORDER_MUTATION}\n                        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n                    >\n                        {createOrder => (\n                            <StripeCheckout\n                                amount={calcTotalPrice(me.cart)}\n                                name=\"Sick Fits\"\n                                description={`Order of ${totalItems(me.cart)} items!`}\n                                image={me.cart.length && me.cart[0].item && me.cart[0].item.image}\n                                stripeKey=\"pk_test_TpDWdng7KOHpVzuklXgxwxO400N0cmGCZP\"\n                                currency=\"USD\"\n                                email={me.email}\n                                token={res => this.onToken(res, createOrder)}\n                            >\n                                {this.props.children}\n                            </StripeCheckout>\n                        )}\n                    </Mutation>\n                )\n                }}\n            </User>\n        );\n    }\n}\n\nexport default TakeMyMoney;\nexport { CREATE_ORDER_MUTATION };"]},"metadata":{},"sourceType":"module"}