{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onToken\", res => {\n      console.log('On Token Called!');\n      console.log(res.id);\n    });\n  }\n\n  render() {\n    return __jsx(User, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ({\n      data: {\n        me\n      }\n    }) => __jsx(StripeCheckout, {\n      amount: calcTotalPrice(me.cart),\n      name: \"Sick Fits\",\n      description: `Order of ${totalItems(me.cart)} items!`,\n      image: me.cart[0].item && me.cart[0].item.image,\n      stripeKey: \"pk_test_EKVvwotV8GFMNS6kvB5nur5B00tCfh2GCn\",\n      currency: \"USD\",\n      email: me.email,\n      token: res => this.onToken(res),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nexport default TakeMyMoney;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js"],"names":["React","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","Component","res","console","log","id","render","data","me","item","image","email","onToken","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,IAAeC,kBAAf,QAAyC,QAAzC;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,QAAR,KAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAlD,EAA4D,CAA5D,CAAP;AACH;;AAED,MAAMC,WAAN,SAA0BjB,KAAK,CAACkB,SAAhC,CAA0C;AAAA;AAAA;;AAAA,qCAC5BC,GAAG,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,EAAhB;AACH,KAJqC;AAAA;;AAKtCC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KACG,MAAC,cAAD;AACI,MAAA,MAAM,EAAElB,cAAc,CAACkB,EAAE,CAACb,IAAJ,CAD1B;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,WAAW,EAAG,YAAWD,UAAU,CAACc,EAAE,CAACb,IAAJ,CAAU,SAHjD;AAII,MAAA,KAAK,EAAEa,EAAE,CAACb,IAAH,CAAQ,CAAR,EAAWc,IAAX,IAAmBD,EAAE,CAACb,IAAH,CAAQ,CAAR,EAAWc,IAAX,CAAgBC,KAJ9C;AAKI,MAAA,SAAS,EAAC,4CALd;AAMI,MAAA,QAAQ,EAAC,KANb;AAOI,MAAA,KAAK,EAAEF,EAAE,CAACG,KAPd;AAQI,MAAA,KAAK,EAAET,GAAG,IAAI,KAAKU,OAAL,CAAaV,GAAb,CARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUK,KAAKW,KAAL,CAAWC,QAVhB,CAFR,CADJ;AAkBH;;AAxBqC;;AA2B1C,eAAed,WAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nfunction totalItems(cart) {\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n    onToken = res => {\n        console.log('On Token Called!');\n        console.log(res.id);\n    };\n    render() {\n        return (\n            <User>\n                {({ data: { me } }) => (\n                    <StripeCheckout\n                        amount={calcTotalPrice(me.cart)}\n                        name=\"Sick Fits\"\n                        description={`Order of ${totalItems(me.cart)} items!`}\n                        image={me.cart[0].item && me.cart[0].item.image}\n                        stripeKey=\"pk_test_EKVvwotV8GFMNS6kvB5nur5B00tCfh2GCn\"\n                        currency=\"USD\"\n                        email={me.email}\n                        token={res => this.onToken(res)}\n                    >\n                        {this.props.children}\n                    </StripeCheckout>\n                )}\n            </User>\n        );\n    }\n}\n\nexport default TakeMyMoney;"]},"metadata":{},"sourceType":"module"}