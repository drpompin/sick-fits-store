{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createOrder($token: String!) {\\n    createOrder(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\n\nfunction totalItems(cart) {\n  return cart.reduce(function (tally, cartItem) {\n    return tally + cartItem.quantity;\n  }, 0);\n}\n\nvar TakeMyMoney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TakeMyMoney, _React$Component);\n\n  function TakeMyMoney() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TakeMyMoney);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TakeMyMoney)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToken\", function (res, createOrder) {\n      console.log('On Token Called!');\n      console.log(res.id); // manually call the mutation once we have the stripe token\n\n      createOrder({\n        variables: {\n          token: res.id\n        }\n      })[\"catch\"](function (err) {\n        alert(err.message);\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TakeMyMoney, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, function (_ref) {\n        var me = _ref.data.me;\n        return __jsx(Mutation, {\n          mutation: CREATE_ORDER_MUTATION,\n          refetchQueries: [{\n            query: CURRENT_USER_QUERY\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, function (createOrder) {\n          return __jsx(StripeCheckout // amount={calcTotalPrice(me.cart)}\n          // name=\"Sick Fits\"\n          // description={`Order of ${totalItems(me.cart)} items!`}\n          // image={me.cart[0].item && me.cart[0].item.image}\n          // stripeKey=\"pk_test_Vtknn6vSdcZWSG2JWvEiWSqC\"\n          // currency=\"USD\"\n          // email={me.email}\n          // token={res => this.onToken(res, createOrder)}\n          , {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, _this2.props.children);\n        });\n      });\n    }\n  }]);\n\n  return TakeMyMoney;\n}(React.Component);\n\nexport default TakeMyMoney;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js"],"names":["React","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","CREATE_ORDER_MUTATION","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","res","createOrder","console","log","id","variables","token","err","alert","message","me","data","query","props","children","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,IAAeC,kBAAf,QAAyC,QAAzC;AAEA,IAAMC,qBAAqB,GAAGL,GAAH,mBAA3B;;AAcA,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AACtB,SAAOA,IAAI,CAACC,MAAL,CAAY,UAACC,KAAD,EAAQC,QAAR;AAAA,WAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAtC;AAAA,GAAZ,EAA4D,CAA5D,CAAP;AACH;;IAEKC,W;;;;;;;;;;;;;;;;;;8DACQ,UAACC,GAAD,EAAMC,WAAN,EAAsB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,EAAhB,EAF4B,CAG5B;;AACAH,MAAAA,WAAW,CAAC;AACRI,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAEN,GAAG,CAACI;AADJ;AADH,OAAD,CAAX,UAIS,UAAAG,GAAG,EAAI;AACZC,QAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACH,OAND;AAOH,K;;;;;;;6BACQ;AAAA;;AACL,aACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA,YAAWC,EAAX,QAAGC,IAAH,CAAWD,EAAX;AAAA,eACG,MAAC,QAAD;AACI,UAAA,QAAQ,EAAElB,qBADd;AAEI,UAAA,cAAc,EAAE,CAAC;AAAEoB,YAAAA,KAAK,EAAErB;AAAT,WAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIK,UAAAU,WAAW;AAAA,iBACR,MAAC,cAAD,CACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUK,MAAI,CAACY,KAAL,CAAWC,QAVhB,CADQ;AAAA,SAJhB,CADH;AAAA,OADL,CADJ;AAyBH;;;;EAvCqBjC,KAAK,CAACkC,S;;AA0ChC,eAAehB,WAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n    return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n    onToken = (res, createOrder) => {\n        console.log('On Token Called!');\n        console.log(res.id);\n        // manually call the mutation once we have the stripe token\n        createOrder({\n            variables: {\n                token: res.id,\n            },\n        }).catch(err => {\n            alert(err.message);\n        });\n    };\n    render() {\n        return (\n            <User>\n                {({ data: { me } }) => (\n                    <Mutation\n                        mutation={CREATE_ORDER_MUTATION}\n                        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n                    >\n                        {createOrder => (\n                            <StripeCheckout\n                                // amount={calcTotalPrice(me.cart)}\n                                // name=\"Sick Fits\"\n                                // description={`Order of ${totalItems(me.cart)} items!`}\n                                // image={me.cart[0].item && me.cart[0].item.image}\n                                // stripeKey=\"pk_test_Vtknn6vSdcZWSG2JWvEiWSqC\"\n                                // currency=\"USD\"\n                                // email={me.email}\n                                // token={res => this.onToken(res, createOrder)}\n                            >\n                                {this.props.children}\n                            </StripeCheckout>\n                        )}\n                    </Mutation>\n                )}\n            </User>\n        );\n    }\n}\n\nexport default TakeMyMoney;"]},"metadata":{},"sourceType":"module"}