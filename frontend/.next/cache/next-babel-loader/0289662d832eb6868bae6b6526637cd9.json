{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION($id: ID!, $title: String, $description: String, $price: Int) {\n    updateItem(id: $id, title: $title, description: $description, price: $price) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\nclass UpdateItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        type,\n        value\n      } = e.target;\n      const val = type === 'number' ? _parseFloat(value) : value;\n      this.setState({\n        [name]: val\n      });\n    });\n\n    _defineProperty(this, \"updateItem\", async (e, updateItemMutation) => {\n      e.preventDefault();\n      console.log('Updating Item!!');\n      console.log(this.state);\n      const res = await updateItemMutation({\n        variables: _objectSpread({\n          id: this.props.id\n        }, this.state)\n      });\n      console.log('Updated!!');\n    });\n  }\n\n  render() {\n    return __jsx(Query, {\n      query: SINGLE_ITEM_QUERY,\n      variables: {\n        id: this.props.id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, ({\n      data,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Loading...\");\n      if (!data.item) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"No Item Found for ID \", this.props.id);\n      return __jsx(Mutation, {\n        mutation: UPDATE_ITEM_MUTATION,\n        variables: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, (updateItem, {\n        loading,\n        error\n      }) => __jsx(Form, {\n        onSubmit: e => this.updateItem(e, updateItem),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(Error, {\n        error: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), __jsx(\"fieldset\", {\n        disabled: loading,\n        \"aria-busy\": loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Title\", __jsx(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Title\",\n        required: true // In react, defaultValue allows us tie inputbox to some\n        // text without the inputbox values being tied to state\n        ,\n        defaultValue: data.item.title,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Price\", __jsx(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        placeholder: \"Price\",\n        required: true,\n        defaultValue: data.item.price,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), __jsx(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Description\", __jsx(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        placeholder: \"Enter A Description\",\n        required: true,\n        defaultValue: data.item.description,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), __jsx(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Sav\", loading ? 'ing' : 'e', \" Changes\"))));\n    });\n  }\n\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Router","Form","formatMoney","Error","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","e","name","type","value","target","val","setState","updateItemMutation","preventDefault","console","log","state","res","variables","id","props","render","data","loading","item","updateItem","error","title","handleChange","price","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION($id: ID!, $title: String, $description: String, $price: Int) {\n    updateItem(id: $id, title: $title, description: $description, price: $price) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\nclass UpdateItem extends Component {\n    state = {};\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n    updateItem = async (e, updateItemMutation) => {\n        e.preventDefault();\n        console.log('Updating Item!!');\n        console.log(this.state);\n        const res = await updateItemMutation({\n            variables: {\n                id: this.props.id,\n                ...this.state,\n            },\n        });\n        console.log('Updated!!');\n    };\n\n    render() {\n        return (\n            <Query\n                query={SINGLE_ITEM_QUERY}\n                variables={{\n                    id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    if (!data.item) return <p>No Item Found for ID {this.props.id}</p>;\n                    return (\n                        <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                            {(updateItem, { loading, error }) => (\n                                <Form onSubmit={e => this.updateItem(e, updateItem)}>\n                                    <Error error={error} />\n                                    <fieldset disabled={loading} aria-busy={loading}>\n                                        <label htmlFor=\"title\">\n                                            Title\n                                            <input\n                                                type=\"text\"\n                                                id=\"title\"\n                                                name=\"title\"\n                                                placeholder=\"Title\"\n                                                required\n                                            \n                                            // In react, defaultValue allows us tie inputbox to some\n                                            // text without the inputbox values being tied to state\n                                                defaultValue={data.item.title}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"price\">\n                                            Price\n                      <input\n                                                type=\"number\"\n                                                id=\"price\"\n                                                name=\"price\"\n                                                placeholder=\"Price\"\n                                                required\n                                                defaultValue={data.item.price}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"description\">\n                                            Description\n                      <textarea\n                                                id=\"description\"\n                                                name=\"description\"\n                                                placeholder=\"Enter A Description\"\n                                                required\n                                                defaultValue={data.item.description}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n                                        <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                                    </fieldset>\n                                </Form>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };"]},"metadata":{},"sourceType":"module"}