{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nimport styled from 'styled-components';\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    # addToCart below is the mutation endpoint that is called on the server side and id is passed to \n    # it as in ($id: $id!). id and quantity are what we are demanding from the endpoint\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\nconst AddToCartButton = styled.button.withConfig({\n  displayName: \"AddToCart__AddToCartButton\",\n  componentId: \"sc-1syyje4-0\"\n})([\"cursor:pointer;outline:none;\"]);\n\nclass AddToCart extends React.Component {\n  render() {\n    const {\n      id\n    } = this.props; // console.log('props in addToCart====', this.props, id);\n\n    return __jsx(Mutation, {\n      mutation: ADD_TO_CART_MUTATION,\n      variables: {\n        id\n      } // refetchQueries used below functions to update the ui from the cache when changes are \n      // made on the UI; there's no need to refresh the page everytime a new task is done except when \n      // necessary\n      ,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (addToCart, {\n      loading\n    }) => __jsx(AddToCartButton, {\n      disabled: loading,\n      onClick: addToCart\n    }, \"Add\", loading && 'ing', \" To Cart \\uD83D\\uDED2\"));\n  }\n\n}\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };","map":null,"metadata":{},"sourceType":"module"}