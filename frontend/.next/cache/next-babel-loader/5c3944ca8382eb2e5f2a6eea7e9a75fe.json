{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Reset.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nvar RESET_MUTATION = gql(_templateObject());\n\nvar Reset =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reset, _Component);\n\n  function Reset() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reset);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reset)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      password: '',\n      confirmPassword: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Reset, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: RESET_MUTATION,\n        variables: {\n          resetToken: this.props.resetToken,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, function (reset, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading,\n            called = _ref.called;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: function _callee(e) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(reset());\n\n                  case 3:\n                    _this2.setState({\n                      password: '',\n                      confirmPassword: ''\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, __jsx(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Reset Your Password\"), __jsx(Error, {\n          error: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), __jsx(\"label\", {\n          htmlFor: \"password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Password\", __jsx(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), __jsx(\"label\", {\n          htmlFor: \"confirmPassword\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Confirm Your Password\", __jsx(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"confirmPassword\",\n          value: _this2.state.confirmPassword,\n          onChange: _this2.saveToState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })), __jsx(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Reset Your Password!\")));\n      });\n    }\n  }]);\n\n  return Reset;\n}(Component);\n\n_defineProperty(Reset, \"propTypes\", {\n  resetToken: PropTypes.string.isRequired\n});\n\nexport default Reset;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Reset.js"],"names":["React","Component","Mutation","gql","PropTypes","Form","Error","CURRENT_USER_QUERY","RESET_MUTATION","Reset","password","confirmPassword","e","setState","target","name","value","resetToken","props","state","query","reset","error","loading","called","preventDefault","saveToState","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Reset extends Component {\n    static propTypes = {\n        resetToken: PropTypes.string.isRequired,\n    };\n    state = {\n        password: '',\n        confirmPassword: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={RESET_MUTATION}\n                variables={{\n                    resetToken: this.props.resetToken,\n                    password: this.state.password,\n                    confirmPassword: this.state.confirmPassword,\n                }}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(reset, { error, loading, called }) => (\n                    <Form\n                        method=\"post\"\n                        onSubmit={async e => {\n                            e.preventDefault();\n                            await reset();\n                            this.setState({ password: '', confirmPassword: '' });\n                        }}\n                    >\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Reset Your Password</h2>\n                            <Error error={error} />\n                            <label htmlFor=\"password\">\n                                Password\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <label htmlFor=\"confirmPassword\">\n                                Confirm Your Password\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    placeholder=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <button type=\"submit\">Reset Your Password!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Reset;"]},"metadata":{},"sourceType":"module"}