{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseFloat from \"@babel/runtime-corejs2/core-js/parse-float\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/UpdateItem.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_ITEM_MUTATION($id: ID!, $title: String, $description: String, $price: Int) {\\n    updateItem(id: $id, title: $title, description: $description, price: $price) {\\n      id\\n      title\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    item(where: { id: $id }) {\\n      id\\n      title\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nvar UPDATE_ITEM_MUTATION = gql(_templateObject2());\n\nvar UpdateItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateItem, _Component);\n\n  function UpdateItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          type = _e$target.type,\n          value = _e$target.value;\n      var val = type === 'number' ? _parseFloat(value) : value;\n\n      _this.setState(_defineProperty({}, name, val));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateItem\", function _callee(e, updateItemMutation) {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log('Updating Item!!');\n              console.log(_this.state);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(updateItemMutation({\n                variables: _objectSpread({\n                  id: _this.props.id\n                }, _this.state)\n              }));\n\n            case 5:\n              res = _context.sent;\n              console.log('Updated!!');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Query, {\n        query: SINGLE_ITEM_QUERY,\n        variables: {\n          id: this.props.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading;\n        if (loading) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Loading...\");\n        if (!data.item) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"No Item Found for ID \", _this2.props.id);\n        return __jsx(Mutation, {\n          mutation: UPDATE_ITEM_MUTATION,\n          variables: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, function (updateItem, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return __jsx(Form, {\n            onSubmit: function onSubmit(e) {\n              return _this2.updateItem(e, updateItem);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, __jsx(Error, {\n            error: error,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }), __jsx(\"fieldset\", {\n            disabled: loading,\n            \"aria-busy\": loading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, __jsx(\"label\", {\n            htmlFor: \"title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"Title\", __jsx(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\",\n            required: true // In react, defaultValue allows us tie values to the\n            //input box without the inputboxvalues being attached to state\n            ,\n            defaultValue: data.item.title,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            htmlFor: \"price\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Price\", __jsx(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            placeholder: \"Price\",\n            required: true,\n            defaultValue: data.item.price,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          })), __jsx(\"label\", {\n            htmlFor: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"Description\", __jsx(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Enter A Description\",\n            required: true,\n            defaultValue: data.item.description,\n            onChange: _this2.handleChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          })), __jsx(\"button\", {\n            type: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"Sav\", loading ? 'ing' : 'e', \" Changes\")));\n        });\n      });\n    }\n  }]);\n\n  return UpdateItem;\n}(Component);\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/UpdateItem.js"],"names":["React","Component","Mutation","Query","gql","Router","Form","formatMoney","Error","SINGLE_ITEM_QUERY","UPDATE_ITEM_MUTATION","UpdateItem","e","target","name","type","value","val","setState","updateItemMutation","preventDefault","console","log","state","variables","id","props","res","data","loading","item","updateItem","error","title","handleChange","price","description"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION($id: ID!, $title: String, $description: String, $price: Int) {\n    updateItem(id: $id, title: $title, description: $description, price: $price) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\nclass UpdateItem extends Component {\n    state = {};\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val });\n    };\n    updateItem = async (e, updateItemMutation) => {\n        e.preventDefault();\n        console.log('Updating Item!!');\n        console.log(this.state);\n        const res = await updateItemMutation({\n            variables: {\n                id: this.props.id,\n                ...this.state,\n            },\n        });\n        console.log('Updated!!');\n    };\n\n    render() {\n        return (\n            <Query\n                query={SINGLE_ITEM_QUERY}\n                variables={{\n                    id: this.props.id,\n                }}\n            >\n                {({ data, loading }) => {\n                    if (loading) return <p>Loading...</p>;\n                    if (!data.item) return <p>No Item Found for ID {this.props.id}</p>;\n                    return (\n                        <Mutation mutation={UPDATE_ITEM_MUTATION} variables={this.state}>\n                            {(updateItem, { loading, error }) => (\n                                <Form onSubmit={e => this.updateItem(e, updateItem)}>\n                                    <Error error={error} />\n                                    <fieldset disabled={loading} aria-busy={loading}>\n                                        <label htmlFor=\"title\">\n                                            Title\n                                            <input\n                                                type=\"text\"\n                                                id=\"title\"\n                                                name=\"title\"\n                                                placeholder=\"Title\"\n                                                required\n                                                // In react, defaultValue allows us tie values to the\n                                                //input box without the inputboxvalues being attached to state\n                                                defaultValue={data.item.title}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"price\">\n                                            Price\n                      <input\n                                                type=\"number\"\n                                                id=\"price\"\n                                                name=\"price\"\n                                                placeholder=\"Price\"\n                                                required\n                                                defaultValue={data.item.price}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n\n                                        <label htmlFor=\"description\">\n                                            Description\n                      <textarea\n                                                id=\"description\"\n                                                name=\"description\"\n                                                placeholder=\"Enter A Description\"\n                                                required\n                                                defaultValue={data.item.description}\n                                                onChange={this.handleChange}\n                                            />\n                                        </label>\n                                        <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                                    </fieldset>\n                                </Form>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };"]},"metadata":{},"sourceType":"module"}