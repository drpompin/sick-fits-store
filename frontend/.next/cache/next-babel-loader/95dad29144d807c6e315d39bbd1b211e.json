{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/User.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    me {\\n      id\\n      email\\n      name\\n      permissions\\n\\n      # I kept getting the following errors 1,2,3... when I start the application and it prevents me from being able to do\\n      # anything on the app. I still don't understand the error or the way to go about it. \\n      #1. httpLink.js:87 POST http://localhost:4444/ 400 (Bad Request)\\n      #2. [GraphQL error]: Message: Cannot query field \\\"orders\\\" on type \\\"User\\\"., Location: [object Object], Path: undefined\\n      #3. [Network error]: Error: Response not successful: Received status code 400\\n\\n\\n      # In order that I might able to complete other things on the app, I did this hack and hashe out orders as seen below.\\n      # This is a temporary solution until I can figure out a proper solution to the problem\\n      # orders {\\n      #   id\\n      # }\\n      cart {\\n        id\\n        quantity\\n        item {\\n          id\\n          price\\n          image\\n          title\\n          description\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nvar CURRENT_USER_QUERY = gql(_templateObject());\n\nvar User = function User(props) {\n  return __jsx(Query, _extends({}, props, {\n    query: CURRENT_USER_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), function (payload) {\n    return props.children(payload);\n  });\n};\n\nUser.propTypes = {\n  children: PropTypes.func.isRequired\n};\nexport default User;\nexport { CURRENT_USER_QUERY };","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/User.js"],"names":["Query","gql","PropTypes","CURRENT_USER_QUERY","User","props","payload","children","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;;AAmCA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,MAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,KAAK,EAAEF,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACK,UAAAG,OAAO;AAAA,WAAID,KAAK,CAACE,QAAN,CAAeD,OAAf,CAAJ;AAAA,GADZ,CADc;AAAA,CAAlB;;AAMAF,IAAI,CAACI,SAAL,GAAiB;AACbD,EAAAA,QAAQ,EAAEL,SAAS,CAACO,IAAV,CAAeC;AADZ,CAAjB;AAIA,eAAeN,IAAf;AACA,SAASD,kBAAT","sourcesContent":["import { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nconst CURRENT_USER_QUERY = gql`\n  query {\n    me {\n      id\n      email\n      name\n      permissions\n\n      # I kept getting the following errors 1,2,3... when I start the application and it prevents me from being able to do\n      # anything on the app. I still don't understand the error or the way to go about it. \n      #1. httpLink.js:87 POST http://localhost:4444/ 400 (Bad Request)\n      #2. [GraphQL error]: Message: Cannot query field \"orders\" on type \"User\"., Location: [object Object], Path: undefined\n      #3. [Network error]: Error: Response not successful: Received status code 400\n\n\n      # In order that I might able to complete other things on the app, I did this hack and hashe out orders as seen below.\n      # This is a temporary solution until I can figure out a proper solution to the problem\n      # orders {\n      #   id\n      # }\n      cart {\n        id\n        quantity\n        item {\n          id\n          price\n          image\n          title\n          description\n        }\n      }\n    }\n  }\n`;\n\nconst User = props => (\n    <Query {...props} query={CURRENT_USER_QUERY}>\n        {payload => props.children(payload)}\n    </Query>\n);\n\nUser.propTypes = {\n    children: PropTypes.func.isRequired,\n};\n\nexport default User;\nexport { CURRENT_USER_QUERY };"]},"metadata":{},"sourceType":"module"}