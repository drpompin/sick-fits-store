{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/DeleteItem.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport styled from 'styled-components';\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\nconst DeleteButton = styled.button.withConfig({\n  displayName: \"DeleteItem__DeleteButton\",\n  componentId: \"sc-1tipz79-0\"\n})([\"cursor:pointer;\"]);\n\nclass DeleteItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"update\", (cache, payload) => {\n      // manually update the cache on the client, so it matches the server\n      // 1. Read the cache for the items we want\n      const data = cache.readQuery({\n        query: ALL_ITEMS_QUERY\n      });\n      console.log(data, payload); // 2. Filter the deleted itemout of the page\n\n      data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id); // 3. Put the items back!\n\n      cache.writeQuery({\n        query: ALL_ITEMS_QUERY,\n        data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: DELETE_ITEM_MUTATION,\n      variables: {\n        id: this.props.id\n      },\n      update: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, (deleteItem, {\n      error\n    }) => __jsx(DeleteButton, {\n      onClick: () => {\n        if (confirm('Are you sure you want to delete this item?')) {\n          deleteItem().catch(err => {\n            alert(err.message);\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.children));\n  }\n\n}\n\nexport default DeleteItem;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/DeleteItem.js"],"names":["React","Component","Mutation","gql","ALL_ITEMS_QUERY","styled","DELETE_ITEM_MUTATION","DeleteButton","button","DeleteItem","cache","payload","data","readQuery","query","console","log","items","filter","item","id","deleteItem","writeQuery","render","props","update","error","confirm","catch","err","alert","message","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,oBAAoB,GAAGH,GAAI;;;;;;CAAjC;AAQA,MAAMI,YAAY,GAAGF,MAAM,CAACG,MAAV;AAAA;AAAA;AAAA,uBAAlB;;AAIA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;;AAAA,oCAGtB,CAACS,KAAD,EAAQC,OAAR,KAAoB;AACzB;AACA;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAhB,CAAb;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBD,OAAlB,EAJyB,CAKzB;;AACAC,MAAAA,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACK,KAAL,CAAWC,MAAX,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,OAAO,CAACC,IAAR,CAAaS,UAAb,CAAwBD,EAA9D,CAAb,CANyB,CAOzB;;AACAV,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEV,eAAT;AAA0BQ,QAAAA;AAA1B,OAAjB;AACH,KAZ8B;AAAA;;AAa/BW,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,QAAD;AACI,MAAA,QAAQ,EAAEjB,oBADd;AAEI,MAAA,SAAS,EAAE;AAAEc,QAAAA,EAAE,EAAE,KAAKI,KAAL,CAAWJ;AAAjB,OAFf;AAGI,MAAA,MAAM,EAAE,KAAKK,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,CAACJ,UAAD,EAAa;AAAEK,MAAAA;AAAF,KAAb,KACG,MAAC,YAAD;AACI,MAAA,OAAO,EAAE,MAAM;AACX,YAAIC,OAAO,CAAC,4CAAD,CAAX,EAA2D;AACvDN,UAAAA,UAAU,GAAGO,KAAb,CAAmBC,GAAG,IAAI;AACtBC,YAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACH,WAFD;AAGH;AACJ,OAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASK,KAAKP,KAAL,CAAWQ,QAThB,CANR,CADJ;AAqBH;;AAnC8B;;AAsCnC,eAAevB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\nimport styled from 'styled-components';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nconst DeleteButton = styled.button`\n    cursor: pointer;\n`;\n\nclass DeleteItem extends Component {\n    \n    //Apollo gives us access to the cache and the payload as below\n    update = (cache, payload) => {\n        // manually update the cache on the client, so it matches the server\n        // 1. Read the cache for the items we want\n        const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n        console.log(data, payload);\n        // 2. Filter the deleted itemout of the page\n        data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n        // 3. Put the items back!\n        cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={DELETE_ITEM_MUTATION}\n                variables={{ id: this.props.id }}\n                update={this.update}\n            >\n                {(deleteItem, { error }) => (\n                    <DeleteButton\n                        onClick={() => {\n                            if (confirm('Are you sure you want to delete this item?')) {\n                                deleteItem().catch(err => {\n                                    alert(err.message);\n                                });\n                            }\n                        }}\n                    >\n                        {this.props.children}\n                    </DeleteButton>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default DeleteItem;"]},"metadata":{},"sourceType":"module"}