{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Reset.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Reset extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      password: '',\n      confirmPassword: ''\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: RESET_MUTATION,\n      variables: {\n        resetToken: this.props.resetToken,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword\n      },\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, (reset, {\n      error,\n      loading,\n      called\n    }) => __jsx(Form, {\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await reset();\n        this.setState({\n          password: '',\n          confirmPassword: ''\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"fieldset\", {\n      disabled: loading,\n      \"aria-busy\": loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Reset Your Password\"), __jsx(Error, {\n      error: error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), __jsx(\"label\", {\n      htmlFor: \"confirmPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Confirm Your Password\", __jsx(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.saveToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), __jsx(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Reset Your Password!\"))));\n  }\n\n}\n\n_defineProperty(Reset, \"propTypes\", {\n  resetToken: PropTypes.string.isRequired\n});\n\nexport default Reset;","map":{"version":3,"sources":["/Users/mac/Documents/ColabVideos/Advanced-React/sick-fits/frontend/components/Reset.js"],"names":["React","Component","Mutation","gql","PropTypes","Form","Error","CURRENT_USER_QUERY","RESET_MUTATION","Reset","password","confirmPassword","e","setState","target","name","value","render","resetToken","props","state","query","reset","error","loading","called","preventDefault","saveToState","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Reset extends Component {\n    static propTypes = {\n        resetToken: PropTypes.string.isRequired,\n    };\n    state = {\n        password: '',\n        confirmPassword: '',\n    };\n    saveToState = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        return (\n            <Mutation\n                mutation={RESET_MUTATION}\n                variables={{\n                    resetToken: this.props.resetToken,\n                    password: this.state.password,\n                    confirmPassword: this.state.confirmPassword,\n                }}\n                refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n                {(reset, { error, loading, called }) => (\n                    <Form\n                        method=\"post\"\n                        onSubmit={async e => {\n                            e.preventDefault();\n                            await reset();\n                            this.setState({ password: '', confirmPassword: '' });\n                        }}\n                    >\n                        <fieldset disabled={loading} aria-busy={loading}>\n                            <h2>Reset Your Password</h2>\n                            <Error error={error} />\n                            <label htmlFor=\"password\">\n                                Password\n                                <input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <label htmlFor=\"confirmPassword\">\n                                Confirm Your Password\n                                <input\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    placeholder=\"confirmPassword\"\n                                    value={this.state.confirmPassword}\n                                    onChange={this.saveToState}\n                                />\n                            </label>\n\n                            <button type=\"submit\">Reset Your Password!</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default Reset;"]},"metadata":{},"sourceType":"module"}